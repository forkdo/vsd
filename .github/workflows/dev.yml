name: Build on Dev

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: linux
            arch: x86_64
            runner: ubuntu-24.04
          - os: linux
            arch: aarch64
            runner: ubuntu-24.04-arm
          # macos-x86_64 收费
          # - os: macos
          #   arch: x86_64
          #   runner: macos-15-large          
          - os: macos
            arch: aarch64
            runner: macos-15
          - os: windows
            arch: x86_64
            runner: windows-2025         
          - os: windows
            arch: aarch64
            runner: windows-11-arm
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Update Rust
        run: |
          rustup update
          rustc --version
      - uses: actions/checkout@v4
        with:
            submodules: true
      - name: Install x86_64-unknown-linux-musl
        if: matrix.runner == 'ubuntu-24.04'
        run: |
          rustup target add x86_64-unknown-linux-musl
          echo "CARGO_BUILD_TARGET=x86_64-unknown-linux-musl" >> $GITHUB_ENV
      - name: Install aarch64-unknown-linux-musl
        if: matrix.runner == 'ubuntu-24.04-arm'
        run: |
          rustup target add aarch64-unknown-linux-musl
          echo "CARGO_BUILD_TARGET=aarch64-unknown-linux-musl" >> $GITHUB_ENV
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Build vsd
        env:
          OPENSSL_STATIC: "1"
          PKG_CONFIG_ALLOW_CROSS: "1"      
        run: |
          just install-deps
          just build-release
      - name: Check libc type
        if: matrix.os == 'linux'
        run: |
          # if ldd --version 2>&1 | grep -qi "musl"; then
          #     LIBC_TYPE="musl"
          # elif ldd --version 2>&1 | grep -qi "glibc"; then
          #     LIBC_TYPE="gnu"
          # else
          #     LIBC_TYPE="unknown"
          # fi
          if file "target/release/vsd" | grep -q musl; then
              LIBC_TYPE="musl"
          else
              LIBC_TYPE="gnu"
          fi
          echo "LIBC_TYPE=$LIBC_TYPE" >> $GITHUB_ENV          
      - name: Set up upload environment
        uses: benjlevesque/short-sha@v3.0
      - name: Upload linux build
        if: matrix.os == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: "vsd-${{ env.SHA }}-release-${{ matrix.arch }}-unknown-linux-${{ env.LIBC_TYPE }}"
          path: target/release/vsd
      - name: Upload macos build
        if: matrix.os == 'macos'
        uses: actions/upload-artifact@v4
        with:
          name: "vsd-${{ env.SHA }}-release-${{ matrix.arch }}-apple-darwin"
          path: target/release/vsd
      - name: Upload windows build
        if: matrix.os == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: "vsd-${{ env.SHA }}-release-${{ matrix.arch }}-pc-windows-msvc"
          path: target/release/vsd.exe
