name: Build on Dev

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
            submodules: true
      - name: Update Rust
        run: |
          rustup update
          rustc --version
      - uses: jetsung/install-zig@v1
        with:
          version: "0.14.1"
      - name: Check zig version
        run: |
          zig version            
      - name: Install target for Linux
        run: |
          for arch in x86_64 aarch64 loongarch64; do
            rustup target add $arch-unknown-linux-musl
          done    
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Build vsd for Linux
        run: |
          just install-deps-linux
          just update-submodules
          just zigbuild-linux
      - name: Set up upload environment
        uses: benjlevesque/short-sha@v3.0
      - name: Upload linux build for x86_64
        uses: actions/upload-artifact@v4
        with:
          name: vsd-${{ env.SHA }}-release-x86_64-unknown-linux-musl
          path: target/x86_64-unknown-linux-musl/release/vsd
      - name: Upload linux build for aarch64
        uses: actions/upload-artifact@v4
        with:
          name: vsd-${{ env.SHA }}-release-aarch64-unknown-linux-musl
          path: target/aarch64-unknown-linux-musl/release/vsd      
      - name: Upload linux build for loongarch64
        uses: actions/upload-artifact@v4
        with:
          name: vsd-${{ env.SHA }}-release-loongarch64-unknown-linux-musl
          path: target/loongarch64-unknown-linux-musl/release/vsd                

  build-macos:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4
        with:
            submodules: true
      - name: Update Rust
        run: |
          rustup update
          rustc --version
      - name: Install target for MacOS
        run: |
          for arch in x86_64 aarch64; do
            rustup target add $arch-apple-darwin
          done       
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Build vsd for MacOS
        run: |
          just install-deps-macos
          just update-submodules
          just buildx-macos
      - name: Set up upload environment
        uses: benjlevesque/short-sha@v3.0         
      - name: Upload macos build for x86_64
        uses: actions/upload-artifact@v4
        with:
          name: "vsd-${{ env.SHA }}-release-x86_64-apple-darwin"
          path: target/x86_64-apple-darwin/release/vsd
      - name: Upload macos build for aarch64
        uses: actions/upload-artifact@v4
        with:
          name: "vsd-${{ env.SHA }}-release-aarch64-apple-darwin"
          path: target/aarch64-apple-darwin/release/vsd

  build-windows:
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v4
        with:
            submodules: true
      - name: Update Rust
        run: |
          rustup update
          rustc --version
      - name: Install target for Windows
        shell: bash
        run: |
          for arch in x86_64 aarch64; do
            rustup target add $arch-pc-windows-msvc
          done       
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Build vsd for Windows
        run: |
          just install-deps-windows
          just update-submodules
          just buildx-windows
      - name: Set up upload environment
        uses: benjlevesque/short-sha@v3.0         
      - name: Upload windows build for x86_64
        uses: actions/upload-artifact@v4
        with:
          name: "vsd-${{ env.SHA }}-release-x86_64-pc-windows-msvc"
          path: target/x86_64-pc-windows-msvc/release/vsd
      - name: Upload windows build for aarch64
        uses: actions/upload-artifact@v4
        with:
          name: "vsd-${{ env.SHA }}-release-aarch64-pc-windows-msvc"
          path: target/aarch64-pc-windows-msvc/release/vsd          
